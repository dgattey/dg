// =====
// Styles the global site nav (implemented as a sticky fixed header at the top of every
// page). Handles animations across it too.
// =====

$nav-grid-columns: 2 * ($grid-standard-columns - 1);
$underline-height: 3px;

.header-nav {
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  z-index: $depth-4;
}

nav {
  @extend %max-width-element;

  %nav-grid {
    display: grid;

    @include for-phone-up {
      grid-column-gap: $item-spacing-4;
    }

    @include for-tablet-up {
      grid-column-gap: $item-spacing-4;
    }

    @include for-desktop-up {
      grid-column-gap: $item-spacing-3;
    }
  }
}

.logo-wrapper,
.nav-item {
  // Ensures uniform text size on nav items to follow body
  @extend %body-font-style-size;
  align-self: center;
  margin-bottom: 0; // resets the inherited value
}

.logo-wrapper {
  align-self: center;
  grid-column-end: span 2;
  justify-self: start;
  margin: 0;
}

.logo {
  display: inline-block; // This is to allow it to scale on hover
  font-size: 2.3em;
  letter-spacing: -.12em;
  line-height: 1;
}

.nav-items {
  @extend %nav-padding;
  @extend %nav-grid;
  background: $color-bg;
  grid-template-columns: repeat($nav-grid-columns, 1fr);
  margin: 0;

  * {
    list-style: none;
  }
}

.nav-item {
  @include transition-bounce(transform);
  align-self: center;
  display: inline-block;
  grid-column-end: span 4;
  justify-self: start;
  margin: 0;
  text-transform: uppercase;

  &:hover {
    transform: translateY(- $underline-height / 2);
  }
}

.nav-link {
  color: $color-text-dark;
  position: relative;

  &:hover {
    color: $color-text-dark;
  }
}

.nav-active {
  color: $color-primary-bright;

  &:hover {
    color: $color-primary-bright;
  }
}

.nav-inactive {
  &::before,
  &::after {
    // Animation of the underlines
    background-color: $color-primary-bright;
    bottom: -$item-spacing-1;
    content: '';
    height: $underline-height;
    left: 0;
    position: absolute;
    right: 0;
  }

  &::before {
    @extend %hide;
    transform: translateY(- $underline-height);
    transition: transform 0s $ease-out-back, opacity 0s;
  }

  &::after {
    @extend %hide;
    transform: translateY($underline-height / 2);
    transition: transform $animation-duration $ease-out-back, opacity $animation-duration;
  }

  &:hover,
  &:focus {
    &::before,
    &::after {
      @extend %show;
      transform: translateY(0);
    }

    &::before {
      transition: transform $animation-duration $ease-out-back, opacity $animation-duration;
    }

    &::after {
      transition: transform 0s $animation-duration $ease-out-back, opacity 0s $animation-duration;
    }
  }
}
