overwrite: true
hooks:
  afterAllFileWrite:
    - prettier --write
generates:
  # Creates the base Contentful API types in a api.generated.ts file
  src/api/contentful/generated/api.generated.ts:
    documents: 'src/api/contentful/*.{ts,tsx}'
    schema:
      - https://graphql.contentful.com/content/v1/spaces/${NEXT_PUBLIC_CONTENTFUL_SPACE_ID}:
          headers:
            Authorization: Bearer ${NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN}
    plugins:
      - 'typescript'
    config:
      avoidOptionals: true
      constEnums: true
      enumsAsTypes: true
      immutableTypes: true
      defaultScalarType: unknown
      skipTypename: true
      useTypeImports: true
      maybeValue: T | undefined
      scalars:
        DateTime: string
        Dimension: number
        HexColor: string
        # This is fucking rough. Basically there's no good way to import a type here so I personally define a lot of layers of possible
        # nesting that might occur in the JSON data. Basically, content is recursive.
        JSON: '{ nodeType: string, data: Record<string, unknown> | undefined, value: string | undefined, content: Array<{ nodeType: string, data: Record<string, unknown> | undefined, value: string | undefined, content: Array<{ nodeType: string, data: Record<string, unknown> | undefined, value: string | undefined, content: Array<{ nodeType: string, data: Record<string, unknown> | undefined, value: string | undefined, content: Array<{ nodeType: string, data: Record<string, unknown> | undefined, value: string | undefined, content: Array<unknown> | undefined }> | undefined }> | undefined }> | undefined }> | undefined }'
        Quality: number

  # Creates generated types for each operation in Contentful API files
  src/api/contentful/:
    documents: 'src/api/contentful/*.{ts,tsx}'
    schema:
      - https://graphql.contentful.com/content/v1/spaces/${NEXT_PUBLIC_CONTENTFUL_SPACE_ID}:
          headers:
            Authorization: Bearer ${NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN}
    plugins:
      - 'typescript-operations'
    preset: near-operation-file
    presetConfig:
      baseTypesPath: generated/api.generated.ts
      folder: generated
    config:
      avoidOptionals: true
      immutableTypes: true
      skipTypename: true
      useTypeImports: true
      maybeValue: T | undefined

  # Creates the base Github API types in a api.generated.ts file
  src/api/github/generated/api.generated.ts:
    documents: 'src/api/github/*.{ts,tsx}'
    schema:
      - https://api.github.com/graphql:
          headers:
            Authorization: Bearer ${NEXT_PUBLIC_GITHUB_AUTHENTICATION_TOKEN}
    plugins:
      - 'typescript'
    config:
      avoidOptionals: true
      constEnums: true
      enumsAsTypes: true
      onlyOperationTypes: true
      immutableTypes: true
      defaultScalarType: unknown
      skipTypename: true
      useTypeImports: true
      maybeValue: T | undefined
      scalars:
        Base64String: string
        Date: string
        DateTime: string
        GitObjectID: string
        GitSSHRemote: string
        GitTimestamp: string
        HTML: string
        PreciseDateTime: string
        URI: string
        X509Certificate: string

  # Creates generated types for each operation in Github API files
  src/api/github/:
    documents: 'src/api/github/*.{ts,tsx}'
    schema:
      - https://api.github.com/graphql:
          headers:
            Authorization: Bearer ${NEXT_PUBLIC_GITHUB_AUTHENTICATION_TOKEN}
    plugins:
      - 'typescript-operations'
    preset: near-operation-file
    presetConfig:
      baseTypesPath: generated/api.generated.ts
      folder: generated
    config:
      avoidOptionals: true
      immutableTypes: true
      skipTypename: true
      useTypeImports: true
      maybeValue: T | undefined
