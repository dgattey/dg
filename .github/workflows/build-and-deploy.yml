# Tests a build and deploy to Vercel
name: Build and deploy to Vercel
on:
  - push

env:
  VERCEL_DEPLOY_TOKEN: ${{ secrets.VERCEL_DEPLOY_TOKEN }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-deploy:
    timeout-minutes: 10
    name: Build & deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          run_install: false
      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: 'pnpm'
      - run: pnpm install
      - uses: actions-ecosystem/action-get-latest-tag@v1
        name: Get latest version tag
        with:
          semver_only: true
        id: latest-version-tag

      - name: Pull Vercel Environment Information
        if: ${{ steps.latest-version-tag.outputs.tag != '' }}
        run: pnpm vercel pull --yes --environment=production --token=${{ env.VERCEL_DEPLOY_TOKEN }}
      - name: Build Project Artifacts with latest version
        if: ${{ steps.latest-version-tag.outputs.tag != '' }}
        run: |
          echo "Latest tag: ${LATEST_TAG}"
          pnpm vercel build --prod --token=${{ env.VERCEL_DEPLOY_TOKEN }} NEXT_PUBLIC_APP_VERSION="${LATEST_TAG}" -d
        env:
          LATEST_TAG: ${{ steps.latest-version-tag.outputs.tag }}
      - name: Deploy Project Artifacts to Vercel
        if: ${{ steps.latest-version-tag.outputs.tag != '' }}
        run: pnpm vercel deploy --prebuilt --prod --token=${{ env.VERCEL_DEPLOY_TOKEN }}
